{"ast":null,"code":"var _jsxFileName = \"/Users/pgmp/Desktop/frontend/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(null);\n  let [user, setUser] = useState(null);\n\n  let loginUser = async () => {\n    console.log(\"logggin innn\");\n    await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Context-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: null,\n        password: null\n      })\n    });\n  };\n\n  let contextData = {\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"zY+G5N+8H7wFCqhkyy+nfU1QpSs=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/frontend/src/context/AuthContext.js"],"names":["createContext","useState","useEffect","AuthContext","AuthProvider","children","authTokens","setAuthTokens","user","setUser","loginUser","console","log","fetch","method","headers","body","JSON","stringify","username","password","contextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,eAAeG,WAAf;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA1C;AACA,MAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAA9B;;AAEA,MAAIS,SAAS,GAAG,YAAY;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMC,KAAK,CAAC,kCAAD,EAAqC;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqC;AAK9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAf;AALwC,KAArC,CAAX;AAOD,GATD;;AAWA,MAAIC,WAAW,GAAG;AAChBX,IAAAA,SAAS,EAAEA;AADK,GAAlB;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEW,WAA7B;AAAA,cAA2ChB;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAtBM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  let [authTokens, setAuthTokens] = useState(null);\n  let [user, setUser] = useState(null);\n\n  let loginUser = async () => {\n    console.log(\"logggin innn\");\n    await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Context-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username: null, password: null }),\n    });\n  };\n\n  let contextData = {\n    loginUser: loginUser,\n  };\n\n  return (\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}