{"ast":null,"code":"var _jsxFileName = \"/Users/pgmp/Desktop/frontend/src/pages/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\"; // Components\n\nimport Header from \"../components/Header\"; // Context\n\nimport AuthContext from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  console.log(\"Todo\");\n  let {\n    user,\n    tokens\n  } = useContext(AuthContext);\n  const [state, setState] = useState({\n    todoList: [],\n    activeItem: {\n      user: user.pk,\n      id: null,\n      title: \"\",\n      completed: false\n    },\n    editing: false\n  });\n\n  const handleFormInput = e => {\n    // let name = e.target.name;\n    let value = e.target.value;\n    setState({ ...state,\n      activeItem: { ...state.activeItem,\n        title: value\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var url = \"http://127.0.0.1:8000/api/task-create/\";\n\n    if (state.editing === true) {\n      url = `http://127.0.0.1:8000/api/task-update/${state.activeItem.id}/`;\n    }\n\n    const csrftoken = getCookie(\"csrftoken\");\n\n    async function submitTask() {\n      try {\n        await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\" // Authorization: `Bearer ${tokens.access}`,\n            // \"X-CSRFToken\": csrftoken,\n\n          },\n          body: JSON.stringify(state.activeItem)\n        });\n        console.log(\"here?\");\n        setState({ ...state,\n          editing: false\n        }); // fetchTasks();\n      } catch {\n        console.log(\"ERROR!\");\n      }\n    }\n\n    submitTask();\n  };\n\n  const startEdit = task => {\n    setState({ ...state,\n      activeItem: task,\n      editing: true\n    });\n  };\n\n  const handleDelete = id => {\n    const deleteTask = async () => {\n      try {\n        await fetch(`http://127.0.0.1:8000/api/task-delete/${id}/`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        fetchTasks();\n      } catch {\n        console.log(\"ERROR!\");\n      }\n    };\n\n    deleteTask();\n  };\n\n  const handleCompleted = task => {\n    task.completed = !task.completed;\n\n    const completeTask = async () => {\n      try {\n        await fetch(`http://127.0.0.1:8000/api/task-update/${task.id}/`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(task)\n        });\n        fetchTasks();\n      } catch {\n        console.log(\"ERROR updating task completion!\");\n      }\n    };\n\n    completeTask();\n  };\n\n  async function fetchTasks() {\n    console.log(\"Fetching\", tokens.access);\n    let response = await fetch(`http://127.0.0.1:8000/api/task-list/${user.pk}/`, {\n      Method: \"GET\",\n      Headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + tokens.access // Authorization: `Bearer ${tokens.access}`,\n\n      }\n    });\n    console.log(\"still fetching\", response);\n    let data = await response.json();\n    console.log(\"Finished fetching\", data);\n\n    if (response.status === 200) {\n      setState({\n        todoList: data,\n        // Reset the activeItem object\n        activeItem: {\n          user: user.pk,\n          id: null,\n          title: \"\",\n          completed: false\n        },\n        editing: false\n      });\n    }\n  }\n\n  function getCookie(name) {\n    let cookieValue = null;\n\n    if (document.cookie && document.cookie !== \"\") {\n      const cookies = document.cookie.split(\";\");\n\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  }\n\n  useEffect(() => {\n    if (state.editing === false) fetchTasks();\n  }, [state.editing]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"form-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"form\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 6\n                },\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  id: \"title\",\n                  name: \"title\",\n                  onChange: handleFormInput,\n                  placeholder: \"Title\",\n                  type: \"text\",\n                  value: state.activeItem.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"btn btn-warning\",\n                  id: \"submit\",\n                  name: \"Add\",\n                  type: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-wrapper\",\n            children: state.todoList.length > 0 && state.todoList.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: task.completed ? \"completed\" : null,\n                style: {\n                  flex: 7\n                },\n                onClick: () => handleCompleted(task),\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: () => startEdit(task),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => handleDelete(task.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Todo, \"7AzNYDrhtuhbxjs5igiYEQZ2jmc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/frontend/src/pages/Todo.js"],"names":["React","useState","useEffect","useContext","Header","AuthContext","Todo","console","log","user","tokens","state","setState","todoList","activeItem","pk","id","title","completed","editing","handleFormInput","e","value","target","handleSubmit","preventDefault","url","csrftoken","getCookie","submitTask","fetch","method","headers","body","JSON","stringify","startEdit","task","handleDelete","deleteTask","fetchTasks","handleCompleted","completeTask","access","response","Method","Headers","Authorization","data","json","status","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","flex","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\n// Components\nimport Header from \"../components/Header\";\n\n// Context\nimport AuthContext from \"../context/AuthContext\";\n\nconst Todo = () => {\n  console.log(\"Todo\");\n  let { user, tokens } = useContext(AuthContext);\n\n  const [state, setState] = useState({\n    todoList: [],\n    activeItem: {\n      user: user.pk,\n      id: null,\n      title: \"\",\n      completed: false,\n    },\n    editing: false,\n  });\n\n  const handleFormInput = (e) => {\n    // let name = e.target.name;\n    let value = e.target.value;\n    setState({\n      ...state,\n      activeItem: { ...state.activeItem, title: value },\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    var url = \"http://127.0.0.1:8000/api/task-create/\";\n    if (state.editing === true) {\n      url = `http://127.0.0.1:8000/api/task-update/${state.activeItem.id}/`;\n    }\n    const csrftoken = getCookie(\"csrftoken\");\n    async function submitTask() {\n      try {\n        await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // Authorization: `Bearer ${tokens.access}`,\n            // \"X-CSRFToken\": csrftoken,\n          },\n          body: JSON.stringify(state.activeItem),\n        });\n        console.log(\"here?\");\n        setState({\n          ...state,\n          editing: false,\n        });\n        // fetchTasks();\n      } catch {\n        console.log(\"ERROR!\");\n      }\n    }\n    submitTask();\n  };\n\n  const startEdit = (task) => {\n    setState({ ...state, activeItem: task, editing: true });\n  };\n\n  const handleDelete = (id) => {\n    const deleteTask = async () => {\n      try {\n        await fetch(`http://127.0.0.1:8000/api/task-delete/${id}/`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        fetchTasks();\n      } catch {\n        console.log(\"ERROR!\");\n      }\n    };\n    deleteTask();\n  };\n\n  const handleCompleted = (task) => {\n    task.completed = !task.completed;\n    const completeTask = async () => {\n      try {\n        await fetch(`http://127.0.0.1:8000/api/task-update/${task.id}/`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(task),\n        });\n        fetchTasks();\n      } catch {\n        console.log(\"ERROR updating task completion!\");\n      }\n    };\n    completeTask();\n  };\n\n  async function fetchTasks() {\n    console.log(\"Fetching\", tokens.access);\n    let response = await fetch(\n      `http://127.0.0.1:8000/api/task-list/${user.pk}/`,\n      {\n        Method: \"GET\",\n        Headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + tokens.access,\n          // Authorization: `Bearer ${tokens.access}`,\n        },\n      }\n    );\n    console.log(\"still fetching\", response);\n    let data = await response.json();\n    console.log(\"Finished fetching\", data);\n    if (response.status === 200) {\n      setState({\n        todoList: data,\n        // Reset the activeItem object\n        activeItem: {\n          user: user.pk,\n          id: null,\n          title: \"\",\n          completed: false,\n        },\n        editing: false,\n      });\n    }\n  }\n\n  function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\") {\n      const cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  useEffect(() => {\n    if (state.editing === false) fetchTasks();\n  }, [state.editing]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <div className=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form id=\"form\" onSubmit={handleSubmit}>\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                  <input\n                    className=\"form-control\"\n                    id=\"title\"\n                    name=\"title\"\n                    onChange={handleFormInput}\n                    placeholder=\"Title\"\n                    type=\"text\"\n                    value={state.activeItem.title}\n                  />\n                </div>\n                <div style={{ flex: 1 }}>\n                  <input\n                    className=\"btn btn-warning\"\n                    id=\"submit\"\n                    name=\"Add\"\n                    type=\"submit\"\n                  />\n                </div>\n              </div>\n            </form>\n            <div className=\"list-wrapper\">\n              {state.todoList.length > 0 &&\n                state.todoList.map((task) => (\n                  <div key={task.id} className=\"task-wrapper\">\n                    <div\n                      className={task.completed ? \"completed\" : null}\n                      style={{ flex: 7 }}\n                      onClick={() => handleCompleted(task)}\n                    >\n                      {task.title}\n                    </div>\n                    <div style={{ flex: 1 }}>\n                      <button\n                        className=\"btn btn-success\"\n                        onClick={() => startEdit(task)}\n                      >\n                        Edit\n                      </button>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => handleDelete(task.id)}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}